{"version":3,"file":"plugins/plugin.url.js","mappings":"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","sources":["webpack://@internetarchive/bookreader/./src/plugins/url/UrlPlugin.js","webpack://@internetarchive/bookreader/./src/plugins/url/plugin.url.js"],"sourcesContent":["export class UrlPlugin {\r\n  constructor(options = {}) {\r\n    this.bookReaderOptions = options;\r\n\r\n    // the canonical order of elements is important in the path and query string\r\n    this.urlSchema = [\r\n      { name: 'page', position: 'path', default: 'n0' },\r\n      { name: 'mode', position: 'path', default: '2up' },\r\n      { name: 'search', position: 'path', deprecated_for: 'q' },\r\n      { name: 'q', position: 'query_param' },\r\n      { name: 'sort', position: 'query_param' },\r\n      { name: 'view', position: 'query_param' },\r\n      { name: 'admin', position: 'query_param' },\r\n    ];\r\n\r\n    this.urlState = {};\r\n    this.urlMode = this.bookReaderOptions.urlMode || 'hash';\r\n    this.urlHistoryBasePath = this.bookReaderOptions.urlHistoryBasePath ||  '/';\r\n    this.urlLocationPollId = null;\r\n    this.oldLocationHash = null;\r\n    this.oldUserHash = null;\r\n  }\r\n\r\n  /**\r\n   * Parse JSON object URL state to string format\r\n   * Arrange path names in an order that it is positioned on the urlSchema\r\n   * @param {Object} urlState\r\n   * @returns {string}\r\n   */\r\n  urlStateToUrlString(urlState) {\r\n    const searchParams = new URLSearchParams();\r\n    const pathParams = {};\r\n\r\n    Object.keys(urlState).forEach(key => {\r\n      let schema = this.urlSchema.find(schema => schema.name === key);\r\n      if (schema?.deprecated_for) {\r\n        schema = this.urlSchema.find(schemaKey => schemaKey.name === schema.deprecated_for);\r\n      }\r\n      if (schema?.position == 'path') {\r\n        pathParams[schema?.name] = urlState[key];\r\n      } else {\r\n        searchParams.append(schema?.name || key, urlState[key]);\r\n      }\r\n    });\r\n\r\n    const strPathParams = this.urlSchema\r\n      .filter(s => s.position == 'path')\r\n      .map(schema => pathParams[schema.name] ? `${schema.name}/${encodeURIComponent(pathParams[schema.name])}` : '')\r\n      .join('/');\r\n\r\n    // replace consecutive slashes with a single slash + remove trailing slashes\r\n    const strStrippedTrailingSlash = `${strPathParams.replace(/\\/+/g, '/').replace(/\\/+$/, '')}`;\r\n    const concatenatedPath = `${strStrippedTrailingSlash}?${searchParams.toString()}`;\r\n    return searchParams.toString() ? concatenatedPath : `${strStrippedTrailingSlash}`;\r\n  }\r\n\r\n  /**\r\n   * Parse string URL and add it in the current urlState\r\n   * Example:\r\n   *  /page/n7/mode/2up => {page: 'n7', mode: '2up'}\r\n   *  /page/n7/mode/2up/search/hello => {page: 'n7', mode: '2up', q: 'hello'}\r\n   * @param {string} urlString\r\n   * @returns {object}\r\n   */\r\n  urlStringToUrlState(urlString) {\r\n    const urlState = {};\r\n\r\n    // Fetch searchParams from given {str}\r\n    // Note: whole URL path is needed for URL parsing\r\n    const urlPath = new URL(urlString, 'http://example.com');\r\n    const urlSearchParamsObj = Object.fromEntries(urlPath.searchParams.entries());\r\n    const splitUrlMatches = urlPath.pathname.match(/[^\\\\/]+\\/[^\\\\/]+/g);\r\n    const urlStrSplitSlashObj = splitUrlMatches ? Object.fromEntries(splitUrlMatches.map(x => x.split('/'))) : {};\r\n\r\n    const doesKeyExists = (_object, _key) => {\r\n      return Object.keys(_object).some(value => value == _key);\r\n    };\r\n\r\n    // Add path objects to urlState\r\n    this.urlSchema\r\n      .filter(schema => schema.position == 'path')\r\n      .forEach(schema => {\r\n        const hasPropertyKey = doesKeyExists(urlStrSplitSlashObj, schema.name);\r\n        const hasDeprecatedKey = doesKeyExists(schema, 'deprecated_for') && hasPropertyKey;\r\n\r\n        // Not in the URL\r\n        if (!hasPropertyKey && !hasDeprecatedKey) {\r\n          return;\r\n        }\r\n\r\n        const urlStateParam = hasDeprecatedKey ? schema.deprecated_for : schema.name;\r\n        urlState[urlStateParam] = decodeURIComponent(urlStrSplitSlashObj[schema.name]);\r\n      });\r\n\r\n    // Add searchParams to urlState\r\n    Object.entries(urlSearchParamsObj).forEach(([key, value]) => {\r\n      urlState[key] = value;\r\n    });\r\n\r\n    return urlState;\r\n  }\r\n\r\n  /**\r\n   * Add or update key-value to the urlState\r\n   * @param {string} key\r\n   * @param {string} val\r\n   */\r\n  setUrlParam(key, value) {\r\n    this.urlState[key] = value;\r\n\r\n    this.pushToAddressBar();\r\n  }\r\n\r\n  /**\r\n   * Delete key-value to the urlState\r\n   * @param {string} key\r\n   */\r\n  removeUrlParam(key) {\r\n    delete this.urlState[key];\r\n\r\n    this.pushToAddressBar();\r\n  }\r\n\r\n  /**\r\n   * Get key-value from the urlState\r\n   * @param {string} key\r\n   * @return {string}\r\n   */\r\n  getUrlParam(key) {\r\n    return this.urlState[key];\r\n  }\r\n\r\n  /**\r\n   * Push URL params to addressbar\r\n   */\r\n  pushToAddressBar() {\r\n    const urlStrPath = this.urlStateToUrlString(this.urlState);\r\n    const concatenatedPath = urlStrPath !== '/' ? urlStrPath : '';\r\n    if (this.urlMode == 'history') {\r\n      if (!window.history || !window.history.replaceState) {\r\n        this.options.urlMode = 'hash';\r\n      } else {\r\n        const newUrlPath = `${this.urlHistoryBasePath}${concatenatedPath}`.trim().replace(/(\\/+)/g, '/');\r\n        try {\r\n          window.history.replaceState({}, null, newUrlPath);\r\n        } catch (e) {\r\n          // DOMException on Chrome when in sandboxed iframe\r\n          this.urlMode = 'hash';\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.urlMode == 'hash') {\r\n      window.location.replace('#' + concatenatedPath);\r\n    }\r\n    this.oldLocationHash = urlStrPath;\r\n  }\r\n\r\n  /**\r\n   * Get the url and check if it has changed\r\n   * If it was changeed, update the urlState\r\n   */\r\n  listenForHashChanges() {\r\n    this.oldLocationHash = window.location.hash.substr(1);\r\n    if (this.urlLocationPollId) {\r\n      clearInterval(this.urlLocationPollId);\r\n      this.urlLocationPollId = null;\r\n    }\r\n\r\n    // check if the URL changes\r\n    const updateHash = () => {\r\n      const newFragment = window.location.hash.substr(1);\r\n      const hasFragmentChange = newFragment != this.oldLocationHash;\r\n\r\n      if (!hasFragmentChange) { return; }\r\n\r\n      this.urlState = this.urlStringToUrlState(newFragment);\r\n    };\r\n    this.urlLocationPollId = setInterval(updateHash, 500);\r\n  }\r\n\r\n  /**\r\n   * Will read either the hash or URL and return the bookreader fragment\r\n   */\r\n  pullFromAddressBar (location = window.location) {\r\n    const path = this.urlMode === 'history'\r\n      ? (location.pathname.substr(this.urlHistoryBasePath.length) + location.search)\r\n      : location.hash.substr(1);\r\n    this.urlState = this.urlStringToUrlState(path);\r\n  }\r\n}\r\n","/* global BookReader */\r\n\r\nimport { UrlPlugin } from \"./UrlPlugin\";\r\n\r\n/**\r\n * Plugin for URL management in BookReader\r\n * Note read more about the url \"fragment\" here:\r\n * https://openlibrary.org/dev/docs/bookurls\r\n */\r\n\r\njQuery.extend(BookReader.defaultOptions, {\r\n  enableUrlPlugin: true,\r\n  bookId: '',\r\n  /** @type {string} Defaults can be a urlFragment string */\r\n  defaults: null,\r\n  updateWindowTitle: false,\r\n\r\n  /** @type {'history' | 'hash'} */\r\n  urlMode: 'hash',\r\n\r\n  /**\r\n   * When using 'history' mode, this part of the URL is kept constant\r\n   * @example /details/plato/\r\n   */\r\n  urlHistoryBasePath: '/',\r\n\r\n  /** Only these params will be reflected onto the URL */\r\n  urlTrackedParams: ['page', 'search', 'mode', 'region', 'highlight', 'view'],\r\n\r\n  /** If true, don't update the URL when `page == n0 (eg \"/page/n0\")` */\r\n  urlTrackIndex0: false,\r\n});\r\n\r\n/** @override */\r\nBookReader.prototype.setup = (function(super_) {\r\n  return function(options) {\r\n    super_.call(this, options);\r\n\r\n    this.bookId = options.bookId;\r\n    this.defaults = options.defaults;\r\n\r\n    this.locationPollId = null;\r\n    this.oldLocationHash = null;\r\n    this.oldUserHash = null;\r\n  };\r\n})(BookReader.prototype.setup);\r\n\r\n/** @override */\r\nBookReader.prototype.init = (function(super_) {\r\n  return function() {\r\n\r\n    if (this.options.enableUrlPlugin) {\r\n      this.bind(BookReader.eventNames.PostInit, () => {\r\n        const { updateWindowTitle, urlMode } = this.options;\r\n        if (updateWindowTitle) {\r\n          document.title = this.shortTitle(this.bookTitle, 50);\r\n        }\r\n        if (urlMode === 'hash') {\r\n          this.urlStartLocationPolling();\r\n        }\r\n      });\r\n\r\n      this.bind(BookReader.eventNames.fragmentChange,\r\n        this.urlUpdateFragment.bind(this)\r\n      );\r\n    }\r\n    super_.call(this);\r\n  };\r\n})(BookReader.prototype.init);\r\n\r\n/**\r\n * Returns a shortened version of the title with the maximum number of characters\r\n * @param {number} maximumCharacters\r\n * @return {string}\r\n */\r\nBookReader.prototype.shortTitle = function(maximumCharacters) {\r\n  if (this.bookTitle.length < maximumCharacters) {\r\n    return this.bookTitle;\r\n  }\r\n\r\n  const title = `${this.bookTitle.substr(0, maximumCharacters - 3)}...`;\r\n  return title;\r\n};\r\n\r\n/**\r\n * Starts polling of window.location to see hash fragment changes\r\n */\r\nBookReader.prototype.urlStartLocationPolling = function() {\r\n  this.oldLocationHash = this.urlReadFragment();\r\n\r\n  if (this.locationPollId) {\r\n    clearInterval(this.locationPollId);\r\n    this.locationPollId = null;\r\n  }\r\n\r\n  const updateHash = () => {\r\n    const newFragment = this.urlReadFragment();\r\n    const hasFragmentChange = (newFragment != this.oldLocationHash) && (newFragment != this.oldUserHash);\r\n\r\n    if (!hasFragmentChange) { return; }\r\n\r\n    const params = this.paramsFromFragment(newFragment);\r\n\r\n    const updateParams = () => this.updateFromParams(params);\r\n\r\n    this.trigger(BookReader.eventNames.stop);\r\n    if (this.animating) {\r\n      // Queue change if animating\r\n      if (this.autoStop) this.autoStop();\r\n      this.animationFinishedCallback = updateParams;\r\n    } else {\r\n      // update immediately\r\n      updateParams();\r\n    }\r\n    this.oldUserHash = newFragment;\r\n  };\r\n\r\n  this.locationPollId = setInterval(updateHash, 500);\r\n};\r\n\r\n/**\r\n * Update URL from the current parameters.\r\n * Call this instead of manually using window.location.replace\r\n */\r\nBookReader.prototype.urlUpdateFragment = function() {\r\n  const allParams = this.paramsFromCurrent();\r\n  const { urlTrackIndex0, urlTrackedParams } = this.options;\r\n\r\n  if (!urlTrackIndex0\r\n      && (typeof(allParams.index) !== 'undefined')\r\n      && allParams.index === 0) {\r\n    delete allParams.index;\r\n    delete allParams.page;\r\n  }\r\n\r\n  const params = urlTrackedParams.reduce((validParams, paramName) => {\r\n    if (paramName in allParams) {\r\n      validParams[paramName] = allParams[paramName];\r\n    }\r\n    return validParams;\r\n  }, {});\r\n\r\n  const newFragment = this.fragmentFromParams(params, this.options.urlMode);\r\n  const currFragment = this.urlReadFragment();\r\n  const currQueryString = this.getLocationSearch();\r\n  const newQueryString = this.queryStringFromParams(params, currQueryString, this.options.urlMode);\r\n  if (currFragment === newFragment && currQueryString === newQueryString) {\r\n    return;\r\n  }\r\n\r\n  if (this.options.urlMode === 'history') {\r\n    if (!window.history || !window.history.replaceState) {\r\n      this.options.urlMode = 'hash';\r\n    } else {\r\n      const baseWithoutSlash = this.options.urlHistoryBasePath.replace(/\\/+$/, '');\r\n      const newFragmentWithSlash = newFragment === '' ? '' : `/${newFragment}`;\r\n\r\n      const newUrlPath = `${baseWithoutSlash}${newFragmentWithSlash}${newQueryString}`;\r\n      try {\r\n        window.history.replaceState({}, null, newUrlPath);\r\n        this.oldLocationHash = newFragment + newQueryString;\r\n      } catch (e) {\r\n        // DOMException on Chrome when in sandboxed iframe\r\n        this.options.urlMode = 'hash';\r\n      }\r\n    }\r\n  }\r\n\r\n  if (this.options.urlMode === 'hash')  {\r\n    const newQueryStringSearch = this.urlParamsFiltersOnlySearch(this.readQueryString());\r\n    window.location.replace('#' + newFragment + newQueryStringSearch);\r\n    this.oldLocationHash = newFragment + newQueryStringSearch;\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n * Filtering query parameters to select only book search param (?q=foo)\r\n   This needs to be updated/URL system modified if future query params are to be added\r\n * @param {string} url\r\n * @return {string}\r\n * */\r\nBookReader.prototype.urlParamsFiltersOnlySearch = function(url) {\r\n  const params = new URLSearchParams(url);\r\n  return params.has('q') ? `?${new URLSearchParams({ q: params.get('q') })}` : '';\r\n};\r\n\r\n\r\n/**\r\n * Will read either the hash or URL and return the bookreader fragment\r\n * @return {string}\r\n */\r\nBookReader.prototype.urlReadFragment = function() {\r\n  const { urlMode, urlHistoryBasePath } = this.options;\r\n  if (urlMode === 'history') {\r\n    return window.location.pathname.substr(urlHistoryBasePath.length);\r\n  } else {\r\n    return window.location.hash.substr(1);\r\n  }\r\n};\r\n\r\n/**\r\n * Will read the hash return the bookreader fragment\r\n * @return {string}\r\n */\r\nBookReader.prototype.urlReadHashFragment = function() {\r\n  return window.location.hash.substr(1);\r\n};\r\nexport class BookreaderUrlPlugin extends BookReader {\r\n  init() {\r\n    if (this.options.enableUrlPlugin) {\r\n      this.urlPlugin = new UrlPlugin(this.options);\r\n      this.bind(BookReader.eventNames.PostInit, () => {\r\n        const { urlMode } = this.options;\r\n\r\n        if (urlMode === 'hash') {\r\n          this.urlPlugin.listenForHashChanges();\r\n        }\r\n      });\r\n    }\r\n\r\n    super.init();\r\n  }\r\n}\r\n\r\nwindow.BookReader = BookreaderUrlPlugin;\r\nexport default BookreaderUrlPlugin;\r\n"],"names":["UrlPlugin","constructor","options","bookReaderOptions","urlSchema","name","position","default","deprecated_for","urlState","urlMode","urlHistoryBasePath","urlLocationPollId","oldLocationHash","oldUserHash","urlStateToUrlString","searchParams","URLSearchParams","pathParams","Object","keys","forEach","key","schema","find","schemaKey","append","strPathParams","filter","s","map","encodeURIComponent","join","strStrippedTrailingSlash","replace","concatenatedPath","toString","urlStringToUrlState","urlString","urlPath","URL","urlSearchParamsObj","fromEntries","entries","splitUrlMatches","pathname","match","urlStrSplitSlashObj","x","split","doesKeyExists","_object","_key","some","value","hasPropertyKey","hasDeprecatedKey","urlStateParam","decodeURIComponent","setUrlParam","pushToAddressBar","removeUrlParam","getUrlParam","urlStrPath","window","history","replaceState","newUrlPath","trim","e","location","listenForHashChanges","hash","substr","clearInterval","updateHash","newFragment","hasFragmentChange","setInterval","pullFromAddressBar","path","length","search","jQuery","extend","BookReader","defaultOptions","enableUrlPlugin","bookId","defaults","updateWindowTitle","urlTrackedParams","urlTrackIndex0","prototype","setup","super_","call","locationPollId","init","bind","eventNames","PostInit","document","title","shortTitle","bookTitle","urlStartLocationPolling","fragmentChange","urlUpdateFragment","maximumCharacters","urlReadFragment","params","paramsFromFragment","updateParams","updateFromParams","trigger","stop","animating","autoStop","animationFinishedCallback","allParams","paramsFromCurrent","index","page","reduce","validParams","paramName","fragmentFromParams","currFragment","currQueryString","getLocationSearch","newQueryString","queryStringFromParams","baseWithoutSlash","newFragmentWithSlash","newQueryStringSearch","urlParamsFiltersOnlySearch","readQueryString","url","has","q","get","urlReadHashFragment","BookreaderUrlPlugin","urlPlugin"],"sourceRoot":""}