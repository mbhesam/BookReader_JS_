{"version":3,"file":"plugins/plugin.iframe.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,4BAA4B,GAAG,0BAA0B;AAE/DC,UAAU,CAACC,SAAS,CAACC,IAAI,GAAI,UAAUC,MAAM,EAAE;EAC7C,OAAO,YAAY;IACjBA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;IACjBC,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;AACH,CAAC,CAAEL,UAAU,CAACC,SAAS,CAACC,IAAI,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,qBAAqBA,CAACC,EAAE,EAAEC,MAAM,GAAGC,MAAM,CAACD,MAAM,EAAE;EAChE;EACA,IAAI,CAACA,MAAM,EAAE;IACX;EACF;EAEAD,EAAE,CAACG,IAAI,CAACT,UAAU,CAACU,UAAU,CAACC,cAAc,EAAE,MAAM;IAClD,MAAMC,QAAQ,GAAGN,EAAE,CAACO,kBAAkB,CAACP,EAAE,CAACQ,iBAAiB,CAAC,CAAC,CAAC;IAE9DP,MAAM,CAACQ,WAAW,CAChB;MAAEC,IAAI,EAAEjB,4BAA4B;MAAEa;IAAS,CAAC,EAChD,GACF,CAAC;EACH,CAAC,CAAC;EAEFJ,MAAM,CAACS,gBAAgB,CAAC,SAAS,EAAEC,KAAK,IAAI;IAC1C;IACA,IAAI,CAACA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACH,IAAI,KAAKjB,4BAA4B,EAAE;MACnE;IACF;IAEAO,EAAE,CAACc,gBAAgB,CAACd,EAAE,CAACe,kBAAkB,CAACH,KAAK,CAACC,IAAI,CAACP,QAAQ,CAAC,CAAC;EACjE,CAAC,CAAC;AACJ","sources":["webpack://@internetarchive/bookreader/./src/plugins/plugin.iframe.js"],"sourcesContent":["/* global BookReader */\r\n/**\r\n * Plugin for two-way communication between a BookReader in an IFrame and the\r\n * parent web page\r\n */\r\n\r\nconst MESSAGE_TYPE_FRAGMENT_CHANGE = 'bookReaderFragmentChange';\r\n\r\nBookReader.prototype.init = (function (super_) {\r\n  return function () {\r\n    super_.call(this);\r\n    _attachEventListeners(this);\r\n  };\r\n})(BookReader.prototype.init);\r\n\r\n/**\r\n * @private\r\n * Using window.postMessage() and event listeners, the plugin notifies the\r\n * parent window when pages change, and the parent window can also\r\n * explicitly request a page change by sending its own message.\r\n *\r\n * @param {BookReader} br\r\n * @param {Window?} [parent]\r\n */\r\nexport function _attachEventListeners(br, parent = window.parent) {\r\n  // Not embedded, abort\r\n  if (!parent) {\r\n    return;\r\n  }\r\n\r\n  br.bind(BookReader.eventNames.fragmentChange, () => {\r\n    const fragment = br.fragmentFromParams(br.paramsFromCurrent());\r\n\r\n    parent.postMessage(\r\n      { type: MESSAGE_TYPE_FRAGMENT_CHANGE, fragment },\r\n      '*'\r\n    );\r\n  });\r\n\r\n  window.addEventListener('message', event => {\r\n    // Not a recognized message type, abort\r\n    if (!event.data || event.data.type !== MESSAGE_TYPE_FRAGMENT_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    br.updateFromParams(br.paramsFromFragment(event.data.fragment));\r\n  });\r\n}\r\n"],"names":["MESSAGE_TYPE_FRAGMENT_CHANGE","BookReader","prototype","init","super_","call","_attachEventListeners","br","parent","window","bind","eventNames","fragmentChange","fragment","fragmentFromParams","paramsFromCurrent","postMessage","type","addEventListener","event","data","updateFromParams","paramsFromFragment"],"sourceRoot":""}